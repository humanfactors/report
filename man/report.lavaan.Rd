% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.lavaan.R
\name{report.lavaan}
\alias{report.lavaan}
\title{SEM / CFA lavaan Models Report}
\usage{
\method{report}{lavaan}(
  model,
  effsize = "funder2019",
  ci = 0.95,
  standardize = TRUE,
  performance_metrics = "all",
  ...
)
}
\arguments{
\item{model}{Model object.}

\item{effsize}{\href{https://easystats.github.io/report/articles/interpret_metrics.html}{Interpret the standardized parameters} using a set of rules. Default corresponds to "funder2019" for linear models and "chen2010" for logistic models.}

\item{ci}{Confidence Interval (CI) level. Default to 0.95 (95\%).}

\item{standardize}{The method used for standardizing the parameters. Can be \code{"refit"}, \code{"posthoc"}, \code{"smart"}, \code{"basic"} or \code{NULL} (default) for no standardization. See 'Details' in \code{\link[effectsize]{standardize_parameters}}. Note that robust estimation (i.e. \code{robust=TRUE}) of standardized parameters only works when \code{standardize="refit"}.}

\item{performance_metrics}{See \code{\link[performance:model_performance.lm]{model_performance}}.}

\item{...}{Arguments passed to or from other methods. For instance, when \code{bootstrap = TRUE}, arguments like \code{ci_method} are passed down to \code{\link[bayestestR]{describe_posterior}}.}
}
\description{
Create a report of a lavaan model.
}
\examples{
library(report)
library(lavaan)

structure <- " visual  =~ x1 + x2 + x3
               textual =~ x4 + x5 + x6
               speed   =~ x7 + x8 + x9 "

model <- lavaan::cfa(structure, data = HolzingerSwineford1939)
r <- report(model)
to_fulltext(r)
to_table(r)
}
